# Белые мишки отправились на рыбалку. Они собираются сесть в лодку и доплыть от (sx, sy) до (ex, ey). Однако лодка поддается управлению только силы ветра. Каждую секунду ветер дует в одном из следующих направлений: на восток, на юг, на запад или на север. Предположим, что на данный момент лодка находится в (x, y).

# Если ветер дует на восток, то лодка поплывет на (x + 1, y).
# Если ветер дует на юг, то лодка поплывет на (x, y - 1).
# Если ветер дует на запад, то лодка поплывет на (x - 1, y).
# Если ветер дует на север, то лодка поплывет на (x, y + 1).
# Мишки могут остановить лодку, бросив якорь. Тогда лодка остается на (x, y), независимо от того куда дует ветер. Зная направление ветра в следующие t секунд, определите самый ранний момент, когда они смогут приплыть к (ex, ey).

# Входные данные
# В первой строке записаны пять целых чисел t, sx, sy, ex, ey (1 ≤ t ≤ 105,  - 109 ≤ sx, sy, ex, ey ≤ 109). Начальная и конечная позиции будут различаться.

# Во второй строке записано t символов, i-ый символ описывает направление ветра в секунду номер i. В соответствии с ветром символ может быть равен: «E» (восток), «S» (юг), «W» (запад) или «N» (север).

# Выходные данные
# Если можно доплыть до (ex, ey) в течение t секунд, выведите самое раннее время, когда мишкам это удастся. В противном случае выведите «-1» (без кавычек).
# входные данные
# 5 0 0 1 1
# SESNW
# выходные данные
# 4

t, sx, sy, ex, ey = [int(x) for x in input().split()]
wind_direction = input()

distance_x = ex - sx
distance_y = ey - sy

only_east = distance_x > 0
only_north = distance_y > 0

time = 0

for direction in wind_direction:
    if distance_x == 0 and distance_y == 0:
        break

    dx = 0
    dy = 0

    if distance_x != 0:
        if direction == 'E' and only_east:
            dx = 1
        elif direction == 'W' and not only_east:
            dx = -1
    if distance_y != 0:
        if direction == 'N' and only_north:
            dy = 1
        elif direction == 'S' and not only_north:
            dy = -1
    
    distance_x -= dx
    distance_y -= dy
    
    time += 1
    
print(time if distance_x == 0 and distance_y == 0 else -1)
    
    